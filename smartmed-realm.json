{
  "id" : "7c81d03c-c20d-434b-ac35-df3a1cb9f9cc",
  "realm" : "smartmed",
  "notBefore" : 1700795183,
  "defaultSignatureAlgorithm" : "RS256",
  "revokeRefreshToken" : false,
  "refreshTokenMaxReuse" : 0,
  "accessTokenLifespan" : 300,
  "accessTokenLifespanForImplicitFlow" : 900,
  "ssoSessionIdleTimeout" : 1800,
  "ssoSessionMaxLifespan" : 36000,
  "ssoSessionIdleTimeoutRememberMe" : 0,
  "ssoSessionMaxLifespanRememberMe" : 0,
  "offlineSessionIdleTimeout" : 2592000,
  "offlineSessionMaxLifespanEnabled" : false,
  "offlineSessionMaxLifespan" : 5184000,
  "clientSessionIdleTimeout" : 0,
  "clientSessionMaxLifespan" : 0,
  "clientOfflineSessionIdleTimeout" : 0,
  "clientOfflineSessionMaxLifespan" : 0,
  "accessCodeLifespan" : 60,
  "accessCodeLifespanUserAction" : 300,
  "accessCodeLifespanLogin" : 1800,
  "actionTokenGeneratedByAdminLifespan" : 43200,
  "actionTokenGeneratedByUserLifespan" : 300,
  "oauth2DeviceCodeLifespan" : 600,
  "oauth2DevicePollingInterval" : 5,
  "enabled" : true,
  "sslRequired" : "external",
  "registrationAllowed" : false,
  "registrationEmailAsUsername" : false,
  "rememberMe" : false,
  "verifyEmail" : false,
  "loginWithEmailAllowed" : true,
  "duplicateEmailsAllowed" : false,
  "resetPasswordAllowed" : false,
  "editUsernameAllowed" : false,
  "bruteForceProtected" : false,
  "permanentLockout" : false,
  "maxFailureWaitSeconds" : 900,
  "minimumQuickLoginWaitSeconds" : 60,
  "waitIncrementSeconds" : 60,
  "quickLoginCheckMilliSeconds" : 1000,
  "maxDeltaTimeSeconds" : 43200,
  "failureFactor" : 30,
  "roles" : {
    "realm" : [ {
      "id" : "dcff6cac-9783-437b-bc0a-55e72b793fe8",
      "name" : "default-roles-smartmed",
      "description" : "${role_default-roles}",
      "composite" : true,
      "composites" : {
        "realm" : [ "offline_access", "uma_authorization" ],
        "client" : {
          "account" : [ "manage-account", "view-profile" ]
        }
      },
      "clientRole" : false,
      "containerId" : "7c81d03c-c20d-434b-ac35-df3a1cb9f9cc",
      "attributes" : { }
    }, {
      "id" : "253807d7-830f-4c22-9ea5-4ee43581583f",
      "name" : "uma_authorization",
      "description" : "${role_uma_authorization}",
      "composite" : false,
      "clientRole" : false,
      "containerId" : "7c81d03c-c20d-434b-ac35-df3a1cb9f9cc",
      "attributes" : { }
    }, {
      "id" : "4d10074d-ea88-4602-a5d9-b2fbfe4c7a95",
      "name" : "offline_access",
      "description" : "${role_offline-access}",
      "composite" : false,
      "clientRole" : false,
      "containerId" : "7c81d03c-c20d-434b-ac35-df3a1cb9f9cc",
      "attributes" : { }
    } ],
    "client" : {
      "realm-management" : [ {
        "id" : "7eb4a85c-d28f-4b01-89fe-15d789a0e743",
        "name" : "manage-events",
        "description" : "${role_manage-events}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "4cb9a67c-5ced-48c4-84c3-ecd031c68ba8",
        "attributes" : { }
      }, {
        "id" : "c10eb554-715c-46aa-947b-1bfdca56c075",
        "name" : "view-clients",
        "description" : "${role_view-clients}",
        "composite" : true,
        "composites" : {
          "client" : {
            "realm-management" : [ "query-clients" ]
          }
        },
        "clientRole" : true,
        "containerId" : "4cb9a67c-5ced-48c4-84c3-ecd031c68ba8",
        "attributes" : { }
      }, {
        "id" : "5d9b7e3c-99ca-455a-a8eb-90fec6aa7589",
        "name" : "impersonation",
        "description" : "${role_impersonation}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "4cb9a67c-5ced-48c4-84c3-ecd031c68ba8",
        "attributes" : { }
      }, {
        "id" : "0d77f6d6-37d6-4fd7-ba2f-bbe70619032b",
        "name" : "manage-authorization",
        "description" : "${role_manage-authorization}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "4cb9a67c-5ced-48c4-84c3-ecd031c68ba8",
        "attributes" : { }
      }, {
        "id" : "58afa167-7fdd-4b7d-8cc5-6f823a324d4e",
        "name" : "view-users",
        "description" : "${role_view-users}",
        "composite" : true,
        "composites" : {
          "client" : {
            "realm-management" : [ "query-users", "query-groups" ]
          }
        },
        "clientRole" : true,
        "containerId" : "4cb9a67c-5ced-48c4-84c3-ecd031c68ba8",
        "attributes" : { }
      }, {
        "id" : "05681ee7-36b8-475b-a1c4-cb50c1f6ed0a",
        "name" : "manage-users",
        "description" : "${role_manage-users}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "4cb9a67c-5ced-48c4-84c3-ecd031c68ba8",
        "attributes" : { }
      }, {
        "id" : "de6f63e6-5c65-4d6c-a801-2d9dd78145eb",
        "name" : "view-identity-providers",
        "description" : "${role_view-identity-providers}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "4cb9a67c-5ced-48c4-84c3-ecd031c68ba8",
        "attributes" : { }
      }, {
        "id" : "d8db5f0c-44aa-4930-b593-f3136a5901bd",
        "name" : "query-users",
        "description" : "${role_query-users}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "4cb9a67c-5ced-48c4-84c3-ecd031c68ba8",
        "attributes" : { }
      }, {
        "id" : "3c748077-10ca-4894-9cc4-8aeadab0819c",
        "name" : "realm-admin",
        "description" : "${role_realm-admin}",
        "composite" : true,
        "composites" : {
          "client" : {
            "realm-management" : [ "manage-events", "view-clients", "impersonation", "manage-authorization", "view-users", "manage-users", "view-identity-providers", "query-users", "view-events", "manage-identity-providers", "view-realm", "query-realms", "manage-clients", "create-client", "manage-realm", "query-clients", "query-groups", "view-authorization" ]
          }
        },
        "clientRole" : true,
        "containerId" : "4cb9a67c-5ced-48c4-84c3-ecd031c68ba8",
        "attributes" : { }
      }, {
        "id" : "db83726e-e10e-4a7c-82f8-8f4d07bc78c6",
        "name" : "view-events",
        "description" : "${role_view-events}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "4cb9a67c-5ced-48c4-84c3-ecd031c68ba8",
        "attributes" : { }
      }, {
        "id" : "0263a951-95d1-4c75-befe-18f5901dcf11",
        "name" : "manage-identity-providers",
        "description" : "${role_manage-identity-providers}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "4cb9a67c-5ced-48c4-84c3-ecd031c68ba8",
        "attributes" : { }
      }, {
        "id" : "a1717344-8ff8-4b84-be69-480cd00ea1a8",
        "name" : "view-realm",
        "description" : "${role_view-realm}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "4cb9a67c-5ced-48c4-84c3-ecd031c68ba8",
        "attributes" : { }
      }, {
        "id" : "6de88108-1ef1-4de9-9cb1-f6f501f3c0b8",
        "name" : "query-realms",
        "description" : "${role_query-realms}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "4cb9a67c-5ced-48c4-84c3-ecd031c68ba8",
        "attributes" : { }
      }, {
        "id" : "bfceb05e-0325-46e6-bdb1-bcd02bfef736",
        "name" : "create-client",
        "description" : "${role_create-client}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "4cb9a67c-5ced-48c4-84c3-ecd031c68ba8",
        "attributes" : { }
      }, {
        "id" : "a3c8913b-fe3b-49a9-902f-1e3af6d80040",
        "name" : "manage-clients",
        "description" : "${role_manage-clients}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "4cb9a67c-5ced-48c4-84c3-ecd031c68ba8",
        "attributes" : { }
      }, {
        "id" : "ed164f06-fa73-4102-97e9-bcf29ff826d3",
        "name" : "manage-realm",
        "description" : "${role_manage-realm}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "4cb9a67c-5ced-48c4-84c3-ecd031c68ba8",
        "attributes" : { }
      }, {
        "id" : "7fa9ec92-8337-4542-a587-650d4916c9fc",
        "name" : "query-clients",
        "description" : "${role_query-clients}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "4cb9a67c-5ced-48c4-84c3-ecd031c68ba8",
        "attributes" : { }
      }, {
        "id" : "fcb6e43b-415a-4233-8ff9-ee2e3f055cef",
        "name" : "query-groups",
        "description" : "${role_query-groups}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "4cb9a67c-5ced-48c4-84c3-ecd031c68ba8",
        "attributes" : { }
      }, {
        "id" : "9946cc31-6c24-4c5c-927d-9cc81ecb628f",
        "name" : "view-authorization",
        "description" : "${role_view-authorization}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "4cb9a67c-5ced-48c4-84c3-ecd031c68ba8",
        "attributes" : { }
      } ],
      "smartClient" : [ {
        "id" : "8b1f9697-1906-4b72-8ab1-888bd585afc7",
        "name" : "uma_protection",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "e4d85695-41ee-456b-9915-c5bbdaf73a50",
        "attributes" : { }
      } ],
      "security-admin-console" : [ ],
      "admin-cli" : [ ],
      "account-console" : [ ],
      "broker" : [ {
        "id" : "4e8f5759-fce4-484a-a9cd-caa916831786",
        "name" : "read-token",
        "description" : "${role_read-token}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "a463ec87-74c8-4661-b080-deda5462f1c2",
        "attributes" : { }
      } ],
      "account" : [ {
        "id" : "595997b2-6ca2-4bf6-9b19-4efe3252af30",
        "name" : "manage-account",
        "description" : "${role_manage-account}",
        "composite" : true,
        "composites" : {
          "client" : {
            "account" : [ "manage-account-links" ]
          }
        },
        "clientRole" : true,
        "containerId" : "76bf5829-5b27-46d7-b1dd-13e20611a11d",
        "attributes" : { }
      }, {
        "id" : "f7dbb3ec-ab86-49ca-b14b-7f27caf1461c",
        "name" : "view-applications",
        "description" : "${role_view-applications}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "76bf5829-5b27-46d7-b1dd-13e20611a11d",
        "attributes" : { }
      }, {
        "id" : "0265a1f5-e962-42cb-b288-5c0ce5b15e74",
        "name" : "view-groups",
        "description" : "${role_view-groups}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "76bf5829-5b27-46d7-b1dd-13e20611a11d",
        "attributes" : { }
      }, {
        "id" : "d3a531f9-2949-4041-abec-2f684da12167",
        "name" : "view-consent",
        "description" : "${role_view-consent}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "76bf5829-5b27-46d7-b1dd-13e20611a11d",
        "attributes" : { }
      }, {
        "id" : "06baaa1b-cbdd-4b15-a731-cf85aef1b04d",
        "name" : "manage-account-links",
        "description" : "${role_manage-account-links}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "76bf5829-5b27-46d7-b1dd-13e20611a11d",
        "attributes" : { }
      }, {
        "id" : "5b6370bc-a20f-4661-8d9e-eda2589a2f8b",
        "name" : "delete-account",
        "description" : "${role_delete-account}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "76bf5829-5b27-46d7-b1dd-13e20611a11d",
        "attributes" : { }
      }, {
        "id" : "42b835dd-fc69-49d0-b39d-3368c8f4ac97",
        "name" : "view-profile",
        "description" : "${role_view-profile}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "76bf5829-5b27-46d7-b1dd-13e20611a11d",
        "attributes" : { }
      }, {
        "id" : "638a35f3-6aef-4486-8c07-b3b93a8a8f84",
        "name" : "manage-consent",
        "description" : "${role_manage-consent}",
        "composite" : true,
        "composites" : {
          "client" : {
            "account" : [ "view-consent" ]
          }
        },
        "clientRole" : true,
        "containerId" : "76bf5829-5b27-46d7-b1dd-13e20611a11d",
        "attributes" : { }
      } ]
    }
  },
  "groups" : [ ],
  "defaultRole" : {
    "id" : "dcff6cac-9783-437b-bc0a-55e72b793fe8",
    "name" : "default-roles-smartmed",
    "description" : "${role_default-roles}",
    "composite" : true,
    "clientRole" : false,
    "containerId" : "7c81d03c-c20d-434b-ac35-df3a1cb9f9cc"
  },
  "requiredCredentials" : [ "password" ],
  "otpPolicyType" : "totp",
  "otpPolicyAlgorithm" : "HmacSHA1",
  "otpPolicyInitialCounter" : 0,
  "otpPolicyDigits" : 6,
  "otpPolicyLookAheadWindow" : 1,
  "otpPolicyPeriod" : 30,
  "otpPolicyCodeReusable" : false,
  "otpSupportedApplications" : [ "totpAppFreeOTPName", "totpAppMicrosoftAuthenticatorName", "totpAppGoogleName" ],
  "webAuthnPolicyRpEntityName" : "keycloak",
  "webAuthnPolicySignatureAlgorithms" : [ "ES256" ],
  "webAuthnPolicyRpId" : "",
  "webAuthnPolicyAttestationConveyancePreference" : "not specified",
  "webAuthnPolicyAuthenticatorAttachment" : "not specified",
  "webAuthnPolicyRequireResidentKey" : "not specified",
  "webAuthnPolicyUserVerificationRequirement" : "not specified",
  "webAuthnPolicyCreateTimeout" : 0,
  "webAuthnPolicyAvoidSameAuthenticatorRegister" : false,
  "webAuthnPolicyAcceptableAaguids" : [ ],
  "webAuthnPolicyPasswordlessRpEntityName" : "keycloak",
  "webAuthnPolicyPasswordlessSignatureAlgorithms" : [ "ES256" ],
  "webAuthnPolicyPasswordlessRpId" : "",
  "webAuthnPolicyPasswordlessAttestationConveyancePreference" : "not specified",
  "webAuthnPolicyPasswordlessAuthenticatorAttachment" : "not specified",
  "webAuthnPolicyPasswordlessRequireResidentKey" : "not specified",
  "webAuthnPolicyPasswordlessUserVerificationRequirement" : "not specified",
  "webAuthnPolicyPasswordlessCreateTimeout" : 0,
  "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister" : false,
  "webAuthnPolicyPasswordlessAcceptableAaguids" : [ ],
  "users" : [ {
    "id" : "95bdb6fe-0aaa-484e-a0fd-621085457a41",
    "createdTimestamp" : 1700788224420,
    "username" : "service-account-smartclient",
    "enabled" : true,
    "totp" : false,
    "emailVerified" : false,
    "serviceAccountClientId" : "smartClient",
    "credentials" : [ ],
    "disableableCredentialTypes" : [ ],
    "requiredActions" : [ ],
    "realmRoles" : [ "default-roles-smartmed" ],
    "clientRoles" : {
      "smartClient" : [ "uma_protection" ]
    },
    "notBefore" : 0,
    "groups" : [ ]
  }, {
    "id" : "8a8056c4-d5aa-491a-9ed9-e3be2e2ab88d",
    "createdTimestamp" : 1700793119343,
    "username" : "yagosantos",
    "enabled" : true,
    "totp" : false,
    "emailVerified" : true,
    "firstName" : "Yago",
    "lastName" : "Santos",
    "email" : "yagorezende@midiacom.uff.br",
    "credentials" : [ {
      "id" : "1f1b5205-12fb-40bd-85a7-9b709d9592e3",
      "type" : "password",
      "userLabel" : "My password",
      "createdDate" : 1700793132048,
      "secretData" : "{\"value\":\"HYc5XxQZGnqZRt6DFehINRw8TJAwz0IRS/OnLREA1Go=\",\"salt\":\"s13uK2W49r6zuxG93Bg8Yg==\",\"additionalParameters\":{}}",
      "credentialData" : "{\"hashIterations\":27500,\"algorithm\":\"pbkdf2-sha256\",\"additionalParameters\":{}}"
    } ],
    "disableableCredentialTypes" : [ ],
    "requiredActions" : [ ],
    "realmRoles" : [ "default-roles-smartmed" ],
    "notBefore" : 0,
    "groups" : [ ]
  } ],
  "scopeMappings" : [ {
    "clientScope" : "offline_access",
    "roles" : [ "offline_access" ]
  } ],
  "clientScopeMappings" : {
    "account" : [ {
      "client" : "account-console",
      "roles" : [ "manage-account", "view-groups" ]
    } ]
  },
  "clients" : [ {
    "id" : "76bf5829-5b27-46d7-b1dd-13e20611a11d",
    "clientId" : "account",
    "name" : "${client_account}",
    "rootUrl" : "${authBaseUrl}",
    "baseUrl" : "/realms/smartmed/account/",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ "/realms/smartmed/account/*" ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "post.logout.redirect.uris" : "+"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "defaultClientScopes" : [ "web-origins", "acr", "profile", "roles", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "ffd27d98-234e-40d6-b2ce-e12f3b27f890",
    "clientId" : "account-console",
    "name" : "${client_account-console}",
    "rootUrl" : "${authBaseUrl}",
    "baseUrl" : "/realms/smartmed/account/",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ "/realms/smartmed/account/*" ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "post.logout.redirect.uris" : "+",
      "pkce.code.challenge.method" : "S256"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "protocolMappers" : [ {
      "id" : "176bce28-af37-43c8-8a75-f4f79536d2ea",
      "name" : "audience resolve",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-audience-resolve-mapper",
      "consentRequired" : false,
      "config" : { }
    } ],
    "defaultClientScopes" : [ "web-origins", "acr", "profile", "roles", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "ca1c0794-b979-4ddc-afa2-b5c178b528cd",
    "clientId" : "admin-cli",
    "name" : "${client_admin-cli}",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : false,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : true,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : { },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "defaultClientScopes" : [ "web-origins", "acr", "profile", "roles", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "a463ec87-74c8-4661-b080-deda5462f1c2",
    "clientId" : "broker",
    "name" : "${client_broker}",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : true,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : false,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : { },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "defaultClientScopes" : [ "web-origins", "acr", "profile", "roles", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "4cb9a67c-5ced-48c4-84c3-ecd031c68ba8",
    "clientId" : "realm-management",
    "name" : "${client_realm-management}",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : true,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : false,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : { },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "defaultClientScopes" : [ "web-origins", "acr", "profile", "roles", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "7338f51c-42c7-4348-8c3e-5f8960d6280d",
    "clientId" : "security-admin-console",
    "name" : "${client_security-admin-console}",
    "rootUrl" : "${authAdminUrl}",
    "baseUrl" : "/admin/smartmed/console/",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ "/admin/smartmed/console/*" ],
    "webOrigins" : [ "+" ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "post.logout.redirect.uris" : "+",
      "pkce.code.challenge.method" : "S256"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "protocolMappers" : [ {
      "id" : "9ee7a0c8-9ba1-4edd-aff9-b1a3405d07b5",
      "name" : "locale",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "locale",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "locale",
        "jsonType.label" : "String"
      }
    } ],
    "defaultClientScopes" : [ "web-origins", "acr", "profile", "roles", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "e4d85695-41ee-456b-9915-c5bbdaf73a50",
    "clientId" : "smartClient",
    "name" : "smartClient",
    "description" : "",
    "rootUrl" : "",
    "adminUrl" : "",
    "baseUrl" : "",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "secret" : "1Hoc1PeNESLKYyk9t1vUyWq200EESvTB",
    "redirectUris" : [ "*", "http://localhost:8000" ],
    "webOrigins" : [ "*", "http://localhost:8000" ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : true,
    "serviceAccountsEnabled" : true,
    "authorizationServicesEnabled" : true,
    "publicClient" : false,
    "frontchannelLogout" : true,
    "protocol" : "openid-connect",
    "attributes" : {
      "oidc.ciba.grant.enabled" : "false",
      "client.secret.creation.time" : "1700788224",
      "backchannel.logout.session.required" : "true",
      "oauth2.device.authorization.grant.enabled" : "false",
      "display.on.consent.screen" : "false",
      "backchannel.logout.revoke.offline.tokens" : "false"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : true,
    "nodeReRegistrationTimeout" : -1,
    "protocolMappers" : [ {
      "id" : "4d2e545b-bb24-4993-aad1-eb31d1c632e6",
      "name" : "Client ID",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usersessionmodel-note-mapper",
      "consentRequired" : false,
      "config" : {
        "user.session.note" : "client_id",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "client_id",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "2f6b90a0-563c-4173-8f14-043b48588380",
      "name" : "Client Host",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usersessionmodel-note-mapper",
      "consentRequired" : false,
      "config" : {
        "user.session.note" : "clientHost",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "clientHost",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "ab46829f-db5d-4e18-89e2-8044dbf7f92d",
      "name" : "Client IP Address",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usersessionmodel-note-mapper",
      "consentRequired" : false,
      "config" : {
        "user.session.note" : "clientAddress",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "clientAddress",
        "jsonType.label" : "String"
      }
    } ],
    "defaultClientScopes" : [ "web-origins", "acr", "profile", "roles", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ],
    "authorizationSettings" : {
      "allowRemoteResourceManagement" : true,
      "policyEnforcementMode" : "ENFORCING",
      "resources" : [ {
        "name" : "logs",
        "ownerManagedAccess" : false,
        "displayName" : "logs",
        "attributes" : { },
        "_id" : "a0494e5d-93a9-4c4e-902d-1f013d1b8edd",
        "uris" : [ "logs" ],
        "scopes" : [ {
          "name" : "view"
        } ],
        "icon_uri" : ""
      }, {
        "name" : "Default Resource",
        "ownerManagedAccess" : false,
        "displayName" : "Grant Access",
        "attributes" : { },
        "_id" : "049e6593-ef24-4225-bc5a-c65e7f4c9355",
        "uris" : [ "*" ],
        "icon_uri" : ""
      } ],
      "policies" : [ {
        "id" : "fb2bee13-cba6-4a5b-a6d2-5ee2a2da1e1b",
        "name" : "SmartMed App Access",
        "description" : "SmartMed App Access",
        "type" : "resource",
        "logic" : "POSITIVE",
        "decisionStrategy" : "UNANIMOUS",
        "config" : { }
      } ],
      "scopes" : [ {
        "id" : "fa53f851-6ec9-443b-989c-a5b48a47e27a",
        "name" : "view",
        "iconUri" : "",
        "displayName" : "view"
      } ],
      "decisionStrategy" : "UNANIMOUS"
    }
  } ],
  "clientScopes" : [ {
    "id" : "d030e659-315c-4c15-925c-5e62e28e9d22",
    "name" : "web-origins",
    "description" : "OpenID Connect scope for add allowed web origins to the access token",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "false",
      "display.on.consent.screen" : "false",
      "consent.screen.text" : ""
    },
    "protocolMappers" : [ {
      "id" : "0612c490-db75-4784-a716-f9bcae7dce00",
      "name" : "allowed web origins",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-allowed-origins-mapper",
      "consentRequired" : false,
      "config" : { }
    } ]
  }, {
    "id" : "ae01a697-d191-4a1d-ae0a-150f09fd85a5",
    "name" : "email",
    "description" : "OpenID Connect built-in scope: email",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "true",
      "consent.screen.text" : "${emailScopeConsentText}"
    },
    "protocolMappers" : [ {
      "id" : "42521ecd-b39a-48a7-b1a7-9a34413f138b",
      "name" : "email",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "email",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "email",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "36e4ad1b-14da-44d4-906c-5b9e0c3b6d7e",
      "name" : "email verified",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-property-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "emailVerified",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "email_verified",
        "jsonType.label" : "boolean"
      }
    } ]
  }, {
    "id" : "d3abce02-1991-41f0-ac93-4c58d6b1debf",
    "name" : "microprofile-jwt",
    "description" : "Microprofile - JWT built-in scope",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "false"
    },
    "protocolMappers" : [ {
      "id" : "d031dd05-48d6-4290-b7b9-5f9f3bd8c7a6",
      "name" : "upn",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "username",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "upn",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "0a5c09f1-cfca-45bf-aaf8-29ebbaa668f8",
      "name" : "groups",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-realm-role-mapper",
      "consentRequired" : false,
      "config" : {
        "multivalued" : "true",
        "user.attribute" : "foo",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "groups",
        "jsonType.label" : "String"
      }
    } ]
  }, {
    "id" : "081f3d92-c3b3-43f1-aafd-65981e7ae36b",
    "name" : "acr",
    "description" : "OpenID Connect scope for add acr (authentication context class reference) to the token",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "false",
      "display.on.consent.screen" : "false"
    },
    "protocolMappers" : [ {
      "id" : "f5ae1eeb-a615-4572-81c1-db71e6354fd8",
      "name" : "acr loa level",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-acr-mapper",
      "consentRequired" : false,
      "config" : {
        "id.token.claim" : "true",
        "access.token.claim" : "true"
      }
    } ]
  }, {
    "id" : "57cc80d8-ac41-4a41-ba59-a5e4774dce40",
    "name" : "role_list",
    "description" : "SAML role list",
    "protocol" : "saml",
    "attributes" : {
      "consent.screen.text" : "${samlRoleListScopeConsentText}",
      "display.on.consent.screen" : "true"
    },
    "protocolMappers" : [ {
      "id" : "610b9418-4156-49a3-80a2-92bdb4d15153",
      "name" : "role list",
      "protocol" : "saml",
      "protocolMapper" : "saml-role-list-mapper",
      "consentRequired" : false,
      "config" : {
        "single" : "false",
        "attribute.nameformat" : "Basic",
        "attribute.name" : "Role"
      }
    } ]
  }, {
    "id" : "4957469b-6b2a-4591-826b-0da104ea3748",
    "name" : "address",
    "description" : "OpenID Connect built-in scope: address",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "true",
      "consent.screen.text" : "${addressScopeConsentText}"
    },
    "protocolMappers" : [ {
      "id" : "ca635c3b-a530-4c2c-b550-b71a26836ab0",
      "name" : "address",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-address-mapper",
      "consentRequired" : false,
      "config" : {
        "user.attribute.formatted" : "formatted",
        "user.attribute.country" : "country",
        "user.attribute.postal_code" : "postal_code",
        "userinfo.token.claim" : "true",
        "user.attribute.street" : "street",
        "id.token.claim" : "true",
        "user.attribute.region" : "region",
        "access.token.claim" : "true",
        "user.attribute.locality" : "locality"
      }
    } ]
  }, {
    "id" : "4ad798a7-1b22-4749-b0d9-b56c3af6f952",
    "name" : "offline_access",
    "description" : "OpenID Connect built-in scope: offline_access",
    "protocol" : "openid-connect",
    "attributes" : {
      "consent.screen.text" : "${offlineAccessScopeConsentText}",
      "display.on.consent.screen" : "true"
    }
  }, {
    "id" : "15bc7571-d943-44a0-8626-3cba064853e3",
    "name" : "profile",
    "description" : "OpenID Connect built-in scope: profile",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "true",
      "consent.screen.text" : "${profileScopeConsentText}"
    },
    "protocolMappers" : [ {
      "id" : "7e2e79d6-1851-4003-8161-e5312026c834",
      "name" : "middle name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "middleName",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "middle_name",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "cad4eac3-db0d-4d69-8285-ffd8661025f9",
      "name" : "nickname",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "nickname",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "nickname",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "42023038-2e94-40da-a3cb-40ff4c97a506",
      "name" : "full name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-full-name-mapper",
      "consentRequired" : false,
      "config" : {
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "userinfo.token.claim" : "true"
      }
    }, {
      "id" : "ffbdb534-3a41-46e9-aa9a-cd36a6b13ca4",
      "name" : "website",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "website",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "website",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "f47c14d7-5537-4bd2-9989-89af2e4ffe9d",
      "name" : "zoneinfo",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "zoneinfo",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "zoneinfo",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "d6d43f4d-ebd9-4ec4-8787-f5fa395315a7",
      "name" : "gender",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "gender",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "gender",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "685ff103-b6c8-4536-873d-957fb6be105c",
      "name" : "locale",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "locale",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "locale",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "96a098ae-9bf3-45b6-85dd-0c0bd88df9c4",
      "name" : "picture",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "picture",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "picture",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "ce141ffe-bcd4-41a5-a0dd-0a43f43d6be9",
      "name" : "birthdate",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "birthdate",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "birthdate",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "8e184618-7060-49ac-92b3-b3ea12c5bc87",
      "name" : "profile",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "profile",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "profile",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "8dbb10d1-2f3c-4014-b734-a59a5a042420",
      "name" : "given name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "firstName",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "given_name",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "74297e07-6f37-4351-b020-68eb93445ab8",
      "name" : "family name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "lastName",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "family_name",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "97c73ad5-fe05-4596-8a5a-97178bc7aae9",
      "name" : "username",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "username",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "preferred_username",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "21d800da-e5ca-41ee-abd9-dca55cc7d857",
      "name" : "updated at",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "updatedAt",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "updated_at",
        "jsonType.label" : "long"
      }
    } ]
  }, {
    "id" : "c2722aa0-2767-4afd-a963-3183d392c2d9",
    "name" : "phone",
    "description" : "OpenID Connect built-in scope: phone",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "true",
      "consent.screen.text" : "${phoneScopeConsentText}"
    },
    "protocolMappers" : [ {
      "id" : "436c1209-d57d-455d-b768-7c787a8cf4f9",
      "name" : "phone number",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "phoneNumber",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "phone_number",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "fff5e564-39f8-4e1c-acb3-dae8bb259f72",
      "name" : "phone number verified",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "phoneNumberVerified",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "phone_number_verified",
        "jsonType.label" : "boolean"
      }
    } ]
  }, {
    "id" : "145605a9-814e-46e7-9d60-aac9c648791e",
    "name" : "roles",
    "description" : "OpenID Connect scope for add user roles to the access token",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "false",
      "display.on.consent.screen" : "true",
      "consent.screen.text" : "${rolesScopeConsentText}"
    },
    "protocolMappers" : [ {
      "id" : "fa4ea5b9-82e4-459a-b567-6ed115142410",
      "name" : "realm roles",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-realm-role-mapper",
      "consentRequired" : false,
      "config" : {
        "user.attribute" : "foo",
        "access.token.claim" : "true",
        "claim.name" : "realm_access.roles",
        "jsonType.label" : "String",
        "multivalued" : "true"
      }
    }, {
      "id" : "5c1af163-9b79-49a8-b4c8-89e120106efe",
      "name" : "audience resolve",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-audience-resolve-mapper",
      "consentRequired" : false,
      "config" : { }
    }, {
      "id" : "7398cd75-e6bb-4bbf-976f-946b79252d77",
      "name" : "client roles",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-client-role-mapper",
      "consentRequired" : false,
      "config" : {
        "user.attribute" : "foo",
        "access.token.claim" : "true",
        "claim.name" : "resource_access.${client_id}.roles",
        "jsonType.label" : "String",
        "multivalued" : "true"
      }
    } ]
  } ],
  "defaultDefaultClientScopes" : [ "role_list", "profile", "email", "roles", "web-origins", "acr" ],
  "defaultOptionalClientScopes" : [ "offline_access", "address", "phone", "microprofile-jwt" ],
  "browserSecurityHeaders" : {
    "contentSecurityPolicyReportOnly" : "",
    "xContentTypeOptions" : "nosniff",
    "xRobotsTag" : "none",
    "xFrameOptions" : "SAMEORIGIN",
    "contentSecurityPolicy" : "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
    "xXSSProtection" : "1; mode=block",
    "strictTransportSecurity" : "max-age=31536000; includeSubDomains"
  },
  "smtpServer" : { },
  "eventsEnabled" : false,
  "eventsListeners" : [ "jboss-logging", "smartmed-event-listener" ],
  "enabledEventTypes" : [ "SEND_RESET_PASSWORD", "UPDATE_CONSENT_ERROR", "GRANT_CONSENT", "VERIFY_PROFILE_ERROR", "REMOVE_TOTP", "REVOKE_GRANT", "UPDATE_TOTP", "LOGIN_ERROR", "CLIENT_LOGIN", "RESET_PASSWORD_ERROR", "IMPERSONATE_ERROR", "CODE_TO_TOKEN_ERROR", "CUSTOM_REQUIRED_ACTION", "OAUTH2_DEVICE_CODE_TO_TOKEN_ERROR", "RESTART_AUTHENTICATION", "IMPERSONATE", "UPDATE_PROFILE_ERROR", "LOGIN", "OAUTH2_DEVICE_VERIFY_USER_CODE", "UPDATE_PASSWORD_ERROR", "CLIENT_INITIATED_ACCOUNT_LINKING", "TOKEN_EXCHANGE", "AUTHREQID_TO_TOKEN", "LOGOUT", "REGISTER", "DELETE_ACCOUNT_ERROR", "CLIENT_REGISTER", "IDENTITY_PROVIDER_LINK_ACCOUNT", "DELETE_ACCOUNT", "UPDATE_PASSWORD", "CLIENT_DELETE", "FEDERATED_IDENTITY_LINK_ERROR", "IDENTITY_PROVIDER_FIRST_LOGIN", "CLIENT_DELETE_ERROR", "VERIFY_EMAIL", "CLIENT_LOGIN_ERROR", "RESTART_AUTHENTICATION_ERROR", "EXECUTE_ACTIONS", "REMOVE_FEDERATED_IDENTITY_ERROR", "TOKEN_EXCHANGE_ERROR", "PERMISSION_TOKEN", "SEND_IDENTITY_PROVIDER_LINK_ERROR", "EXECUTE_ACTION_TOKEN_ERROR", "SEND_VERIFY_EMAIL", "OAUTH2_DEVICE_AUTH", "EXECUTE_ACTIONS_ERROR", "REMOVE_FEDERATED_IDENTITY", "OAUTH2_DEVICE_CODE_TO_TOKEN", "IDENTITY_PROVIDER_POST_LOGIN", "IDENTITY_PROVIDER_LINK_ACCOUNT_ERROR", "OAUTH2_DEVICE_VERIFY_USER_CODE_ERROR", "UPDATE_EMAIL", "REGISTER_ERROR", "REVOKE_GRANT_ERROR", "EXECUTE_ACTION_TOKEN", "LOGOUT_ERROR", "UPDATE_EMAIL_ERROR", "CLIENT_UPDATE_ERROR", "AUTHREQID_TO_TOKEN_ERROR", "UPDATE_PROFILE", "CLIENT_REGISTER_ERROR", "FEDERATED_IDENTITY_LINK", "SEND_IDENTITY_PROVIDER_LINK", "SEND_VERIFY_EMAIL_ERROR", "RESET_PASSWORD", "CLIENT_INITIATED_ACCOUNT_LINKING_ERROR", "OAUTH2_DEVICE_AUTH_ERROR", "UPDATE_CONSENT", "REMOVE_TOTP_ERROR", "VERIFY_EMAIL_ERROR", "SEND_RESET_PASSWORD_ERROR", "CLIENT_UPDATE", "CUSTOM_REQUIRED_ACTION_ERROR", "IDENTITY_PROVIDER_POST_LOGIN_ERROR", "UPDATE_TOTP_ERROR", "CODE_TO_TOKEN", "VERIFY_PROFILE", "GRANT_CONSENT_ERROR", "IDENTITY_PROVIDER_FIRST_LOGIN_ERROR" ],
  "adminEventsEnabled" : false,
  "adminEventsDetailsEnabled" : false,
  "identityProviders" : [ ],
  "identityProviderMappers" : [ ],
  "components" : {
    "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy" : [ {
      "id" : "47d21418-38f8-4e40-aace-a4e1f9d6025a",
      "name" : "Allowed Protocol Mapper Types",
      "providerId" : "allowed-protocol-mappers",
      "subType" : "authenticated",
      "subComponents" : { },
      "config" : {
        "allowed-protocol-mapper-types" : [ "oidc-sha256-pairwise-sub-mapper", "saml-user-property-mapper", "oidc-full-name-mapper", "saml-role-list-mapper", "oidc-usermodel-attribute-mapper", "oidc-usermodel-property-mapper", "oidc-address-mapper", "saml-user-attribute-mapper" ]
      }
    }, {
      "id" : "0f9a16a9-d198-40bf-a81d-36438265ee67",
      "name" : "Consent Required",
      "providerId" : "consent-required",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : { }
    }, {
      "id" : "65d3d773-8d65-468a-81ac-fecf8c4788b1",
      "name" : "Max Clients Limit",
      "providerId" : "max-clients",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : {
        "max-clients" : [ "200" ]
      }
    }, {
      "id" : "1ed89c41-147a-4258-a556-6e538abefe33",
      "name" : "Allowed Client Scopes",
      "providerId" : "allowed-client-templates",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : {
        "allow-default-scopes" : [ "true" ]
      }
    }, {
      "id" : "69338887-b938-4074-baab-99689b180e45",
      "name" : "Allowed Protocol Mapper Types",
      "providerId" : "allowed-protocol-mappers",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : {
        "allowed-protocol-mapper-types" : [ "oidc-full-name-mapper", "oidc-usermodel-property-mapper", "saml-user-attribute-mapper", "saml-user-property-mapper", "saml-role-list-mapper", "oidc-sha256-pairwise-sub-mapper", "oidc-usermodel-attribute-mapper", "oidc-address-mapper" ]
      }
    }, {
      "id" : "941a6e12-d3e8-4721-8d7a-0184c985ff64",
      "name" : "Trusted Hosts",
      "providerId" : "trusted-hosts",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : {
        "host-sending-registration-request-must-match" : [ "true" ],
        "client-uris-must-match" : [ "true" ]
      }
    }, {
      "id" : "46a5f52a-c359-4185-a139-0d7a210948d7",
      "name" : "Full Scope Disabled",
      "providerId" : "scope",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : { }
    }, {
      "id" : "cae8fbff-6f1b-4daa-9008-c5fbe1514044",
      "name" : "Allowed Client Scopes",
      "providerId" : "allowed-client-templates",
      "subType" : "authenticated",
      "subComponents" : { },
      "config" : {
        "allow-default-scopes" : [ "true" ]
      }
    } ],
    "org.keycloak.keys.KeyProvider" : [ {
      "id" : "17d7390c-4500-4478-bfdf-f6bff1f44e54",
      "name" : "rsa-generated",
      "providerId" : "rsa-generated",
      "subComponents" : { },
      "config" : {
        "privateKey" : [ "MIIEpAIBAAKCAQEA0UJmNt5eycyB3NB2n1ZbbP7weEOrTfMZz300VHH6imNjZ3xBWoI1qlN+YNBuadU78IVhyR7RDRjRO02v8oIICSurHih202E0QfrgXEQAvaJc7RZp1cOtxiInn8AKUb4YEGz2bNUa4PT9yLWW2yXek6QNHqDff7w1wIKAaXGjwm8N52cmbs4SNjuensLfK/v7Z5iBrFsdNzVHxhGK1w1F5pEVInk2EubovZSceZVXl9uWkiPEWzkvOPFbmaSgxy9XNa9lRAlJDRU6RaTHwTW1X/kM4ML8vmdaFWdtDo8uUHIPCh1qEFs7rrah35/HfpiTfWbx4SU2GuZOAOUjLAkvbwIDAQABAoIBAAhNa+rFyQyVBzRj0C3WnX5mLjpHTQoLTCN17z6U3k2uHDW95OxNxqO0XlfbzS9FXSek0x78qjffzsvDwE7AQMgqw5MVveksre5N1HSbFubVnn3VnTgnysKir+As6WJNRxa+JZgAOINjLpjpA39vmDSGL/MRvoXxFlAS0KKrKV+MbNR4E9a4v2tKXtQknBp1O7keUVdiRzRZ8l3ExGAFswVYHzdfThvr3NibF3dfQtqwTHp9T0Mo0OGFGAzkfV0ubK26DcjGaiCb7mRKJNLMPkjOtmO/xfQELs6tOWhQEiCzaDAXYPB/MyRmwxBKRymoxtCzVLyWAFMZ+Qzvj7A6KpECgYEA9rVaP1X1yGFdo3Aa7NwVjSrHSodOEDt2q6obRpnaf50uozA0GPZZ7wpcFpqZnRmxr/MRQns2+3mhkEt0cQlJSx2bpi992WWpO5gCEMgRhxc8uApD5YqtdeyJaLuYdEX+1MdTbfhI7Inax0uX6LcYtCA7/u/VA0uuroZ35skQAucCgYEA2SP7CFXPFDWwEfkX4lYRz7EqhubxvaBnXjWvSWs1WYzAnECqsMUqbRngAXa/VZARNjt/Q6o+ukf34LDiZvy2oDuRDDTMXcW9aorZKxh2eu91Om0sjnNVbS6YGzYCtuShadgHYKrLKZfw9Lj07CfQKgskJuow+kloo1i8DkWb5jkCgYAMbC1TKxzpLh3s8OQqMRrUtOa8FfwUTSo4kqQ09eJOsrd6eB7ncuAsbTUd3kMF6hlMZszjsBigqQs9nM8MMg+CvMbto06O99OBsLHJ7okTaFQiYEHy+PyrB3IT1/5hPHUMecz1qJ7jaj2d82x+x1lzGHxs5d6v/8uX9iVrdYxc2QKBgQDSM92pFQBxLQP0cjHn3rBBYd2sWFc+3dATSF8W8NzlgrdWy9cxZr0Kftj2MdFJcDzpRjGN/Hna9R6F+lZBonTcqq1gpqAMSwdx41YWPQk9OyA93kAa6pWRK2D+PovkJ3IGt6V0tAIWkssk7QPUtTnz6XMm5OFi+bt9HcJ3AnXIKQKBgQCN+nzbnQXEUH5OfP6x6xsQ1gXLCAmGloC3l2EAe2/NMZMe12rNMErIAUNNpoRl4lp+P+FpW6d+M9/y9VXeIC+dA7Sh2Jwzo2J+7akDu5TIl7iDrsaAHh8ZZeyW6z6oAyRzFYiXDJLrbYLvmVcRDdaWhrwYxM7p93J6OuMqtQoG8g==" ],
        "keyUse" : [ "SIG" ],
        "certificate" : [ "MIICnTCCAYUCBgGL/t7xpzANBgkqhkiG9w0BAQsFADASMRAwDgYDVQQDDAdvcGVubXJzMB4XDTIzMTEyNDAxMDY0NVoXDTMzMTEyNDAxMDgyNVowEjEQMA4GA1UEAwwHb3Blbm1yczCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBANFCZjbeXsnMgdzQdp9WW2z+8HhDq03zGc99NFRx+opjY2d8QVqCNapTfmDQbmnVO/CFYcke0Q0Y0TtNr/KCCAkrqx4odtNhNEH64FxEAL2iXO0WadXDrcYiJ5/AClG+GBBs9mzVGuD0/ci1ltsl3pOkDR6g33+8NcCCgGlxo8JvDednJm7OEjY7np7C3yv7+2eYgaxbHTc1R8YRitcNReaRFSJ5NhLm6L2UnHmVV5fblpIjxFs5LzjxW5mkoMcvVzWvZUQJSQ0VOkWkx8E1tV/5DODC/L5nWhVnbQ6PLlByDwodahBbO662od+fx36Yk31m8eElNhrmTgDlIywJL28CAwEAATANBgkqhkiG9w0BAQsFAAOCAQEAqkOevTT9SKcCgMqfcpdppFg00d1zi55T/W4CC1pbx3YK/kiNenec0R30Awmu+Z6CLeMlJ4zDm9BESTdlHYMPWTStrr/jAoBmmTmaMLkhG58rPJleyEmI/FHGjw6d7XYDnyEy1VFrbcyWdaPNDqUUdcRppg3XEM6ZNVn1dTrg8Tyx0u827tt6nmHBZte+j019RqJhwiBntZHzOU+SLRFQG1+I8UrZgDC68pMpIQQVKAr6jmseHvpjz+2xStRQw7vee55SX0Yz6MtZy5fGoJ+gflwp1lMZn4pZnWXjkFIw+Wgvd7hL6EesExPWuwWFy4s4L0gMRGaZNAIZy+ZUl93uOw==" ],
        "priority" : [ "100" ]
      }
    }, {
      "id" : "6d80aca4-24be-4f0f-9502-61dc69035740",
      "name" : "aes-generated",
      "providerId" : "aes-generated",
      "subComponents" : { },
      "config" : {
        "kid" : [ "4b9bdb04-4d00-4ca8-bb19-cbef2f8d82f0" ],
        "secret" : [ "FhlNV3jP6qCj3kb-GpMyHQ" ],
        "priority" : [ "100" ]
      }
    }, {
      "id" : "0cb661f9-6ab3-497f-88e2-b325cc99e2e0",
      "name" : "rsa-enc-generated",
      "providerId" : "rsa-enc-generated",
      "subComponents" : { },
      "config" : {
        "privateKey" : [ "MIIEpAIBAAKCAQEAqCNDZVHalxGzKXF/+izhOwjLLxJnFkEU3g8lHmD03tqGHeyskKP+MZkxBywL+/7x80UatEIdB76MWOe8bViqqu+SIqvcJ6BkAsrypaXckD3QMZjCRCerpTiiCF5ebtZhv7AxICU5xTPkwE57449YeXF4nwNKrpunZtYON8YClzFloDYcEmmZyHWhIQbGXlLaF7syZWc068U7UCq2oEEIguJPw+ixbD5zFIDKavmJuZceuttQSTipknJXkW31akU0nKqmuQfbgO4DJ6qOu4+++M9X+qL8HUtyYR/6B6UZ/v42aBB1ZpRjGh35D+axyby9B5UCP54ddB1oKqcmmwgHdQIDAQABAoIBABRl4MuGNGlu74gn2aGRd8qobLP7fM+lmiE9f6CRnSt7Idm4CJBsoM5GGj1XQeXyvkon2E9FlQ2HN7IifQjcAKqHsXgs1uLk0bVIB0uC1YEXSq51rJ3FnUyIVBoFTtoN/qJZfwA6G+nZe5c7/kozbgWft0U9Sj5oKlUuw19PUamjVQKjp/4BYv0uIHdlco/TiT+VYkzZ3OKxoCeY4b/ys6r7/96KLxvtFrC/yeG720n2X+Zecthun/6vYdRg+DGVi8hPurDPAZZ2In9SXqRaNRAQmc0O/BAc0qnOfV3YlbfJA8zpDpm4IHzdU1FESJUMEPhj50hm9Tw8mqj3/IJR14ECgYEA69l4WmMDNsP9ex+qf1QF6gfik2GpcRRtXDSTgsrv9GbYoi5CKxKUk70HrbzAmwpTyBugkgRcAL0Pjw7/l+U0KnxyY6Xszx+w8Al7NJdcFhmLJN2ekN9phnyJf+u8eVK4uSIMms1D9yIgpUjr4bnsL6AACuPzTHyFhPtUSYdiHPUCgYEAtoDLFRj1KXPzskSgFItrmJmBYkHOXyXA7E9XDW0f9Njb320YWUkI7QXqadGXrtVVCSUtzwpBDEBsvXUE24J7pOQlQ9aPAWrZwrZZmOu5EVKL/3p2oVDFO2Tqu/GNsqK7t+zKUskzoT+9wxmCMez4rcgFBs2qVDFaojbtAVaTsIECgYAM7/n9I09K0sd12I/Wujo000fng8Tysgcptqyc0RsGkhmyE82HZVaHIChqrF74YkGkSXeuatTNKZHP7CezIlyRNBBmTPTHi9p94FdE1ES15aLPW+TV15uHSA+W18yX7yS46xg76aSfytx1lKFz2WoOVr2J22U+PdppKAxAmE+WfQKBgQCQ6uRX9GF4cSJpxCR5K9xcaEhdBXQiCZCQFNBDUQu3GRw+5hoXi+8Sh0gEjvGrWqsTf/pIFRRh7iZqqqkYxRv5a1BL9evIbFhOTQ4IZ+Wk469XRp88qS50Y0Yhx0WFO8Nj4Rsnca0Vtc+xRGglzM4K8HFNXbKK+EXH2WWJUn4kAQKBgQCncK2qWkRWPTY7nIBOQyHounk9aVhpvB3OnvY0wbXu8Jr4ycX7tFCvOfQJQGi8nP68Zd/Zkut9mIQ9xJ5eYPN3fVvHrGk3ZRNn5uO4llfO9xMscXZGw/XxAEGd2AGesk27GlzplP3OwP5hj0eK24jtIziL9MP8E78B60c7/OI3Jg==" ],
        "keyUse" : [ "ENC" ],
        "certificate" : [ "MIICnTCCAYUCBgGL/t7zDTANBgkqhkiG9w0BAQsFADASMRAwDgYDVQQDDAdvcGVubXJzMB4XDTIzMTEyNDAxMDY0NVoXDTMzMTEyNDAxMDgyNVowEjEQMA4GA1UEAwwHb3Blbm1yczCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKgjQ2VR2pcRsylxf/os4TsIyy8SZxZBFN4PJR5g9N7ahh3srJCj/jGZMQcsC/v+8fNFGrRCHQe+jFjnvG1YqqrvkiKr3CegZALK8qWl3JA90DGYwkQnq6U4ogheXm7WYb+wMSAlOcUz5MBOe+OPWHlxeJ8DSq6bp2bWDjfGApcxZaA2HBJpmch1oSEGxl5S2he7MmVnNOvFO1AqtqBBCILiT8PosWw+cxSAymr5ibmXHrrbUEk4qZJyV5Ft9WpFNJyqprkH24DuAyeqjruPvvjPV/qi/B1LcmEf+gelGf7+NmgQdWaUYxod+Q/mscm8vQeVAj+eHXQdaCqnJpsIB3UCAwEAATANBgkqhkiG9w0BAQsFAAOCAQEAXBpQjysw4eTb0t1eDXNG8jenIrAYRNr0SLrqRJehEsy6vnsQECZP4Iu3n3UAyh2DvbXoDHNkBfaG4KEYgOZ4FJ/0CLUr3D+yjRBviS3/yC1o63+g0mUMQr7KBEBvo+UnNz2HcTxMGpIvvYVgpkn7T4vLNSku96Nn4eeNYZqKEeLjPkeOZ0hdBXW4Y4oogVAOYtUQ1+QFQ1ys7RYXi1/bSBsu5U4IVWMkGDhlZXYrWdRVFM4yxCzHy1lF7HUsv/DRlqZ3DGAyf2zUO7USbzbC3GIOu55bYXIS8RnVuZQML+eopIVIPQSe+SfSTft7UqhEymCiL5Je14oWbPowdL9TDg==" ],
        "priority" : [ "100" ],
        "algorithm" : [ "RSA-OAEP" ]
      }
    }, {
      "id" : "87e90181-379b-4a7c-86ff-599a88284e38",
      "name" : "hmac-generated",
      "providerId" : "hmac-generated",
      "subComponents" : { },
      "config" : {
        "kid" : [ "465253ee-f9ac-473c-8d3d-0c16f6b46f87" ],
        "secret" : [ "tllk0hfLcFxLcg5y5Q4jJsVhzPZZc4YWvr0XUZp59cYKy-8nGHuvC2MTtHTo0JlrODUrabdcltQ5iwqQ-mEuaQ" ],
        "priority" : [ "100" ],
        "algorithm" : [ "HS256" ]
      }
    } ]
  },
  "internationalizationEnabled" : false,
  "supportedLocales" : [ ],
  "authenticationFlows" : [ {
    "id" : "d1df8d0e-4ab7-4522-814f-3f4334f59090",
    "alias" : "Account verification options",
    "description" : "Method with which to verity the existing account",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "idp-email-verification",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "ALTERNATIVE",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "Verify Existing Account by Re-authentication",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "548c6bf2-8ca3-41ce-8db4-cdafa8f2ca9c",
    "alias" : "Authentication Options",
    "description" : "Authentication options.",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "basic-auth",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "basic-auth-otp",
      "authenticatorFlow" : false,
      "requirement" : "DISABLED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "auth-spnego",
      "authenticatorFlow" : false,
      "requirement" : "DISABLED",
      "priority" : 30,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "5693f503-0f15-4501-bd3c-36f1889d615e",
    "alias" : "Browser - Conditional OTP",
    "description" : "Flow to determine if the OTP is required for the authentication",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "auth-otp-form",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "4428a626-2d51-408f-ba0f-9b203676f818",
    "alias" : "Direct Grant - Conditional OTP",
    "description" : "Flow to determine if the OTP is required for the authentication",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "direct-grant-validate-otp",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "d7d8211b-ef34-4758-be3d-b37f49263f78",
    "alias" : "First broker login - Conditional OTP",
    "description" : "Flow to determine if the OTP is required for the authentication",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "auth-otp-form",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "7c137b72-2cc4-41e2-bf0b-8fccabc2980b",
    "alias" : "Handle Existing Account",
    "description" : "Handle what to do if there is existing account with same email/username like authenticated identity provider",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "idp-confirm-link",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "Account verification options",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "13c9fbe8-b401-470a-aa36-57304d0c59cc",
    "alias" : "Reset - Conditional OTP",
    "description" : "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "reset-otp",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "b3121a1d-5ed7-497f-992e-923ca8ddb9ff",
    "alias" : "User creation or linking",
    "description" : "Flow for the existing/non-existing user alternatives",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticatorConfig" : "create unique user config",
      "authenticator" : "idp-create-user-if-unique",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "ALTERNATIVE",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "Handle Existing Account",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "66205f0b-6e2b-4b0d-883a-ea1ec8aabc35",
    "alias" : "Verify Existing Account by Re-authentication",
    "description" : "Reauthentication of existing account",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "idp-username-password-form",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "First broker login - Conditional OTP",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "732afb9c-c5cc-4106-bae2-99a99610e1e9",
    "alias" : "browser",
    "description" : "browser based authentication",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "auth-cookie",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "auth-spnego",
      "authenticatorFlow" : false,
      "requirement" : "DISABLED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "identity-provider-redirector",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 25,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "ALTERNATIVE",
      "priority" : 30,
      "autheticatorFlow" : true,
      "flowAlias" : "forms",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "e8c708f3-7f6d-49ac-9378-c52be9f7faed",
    "alias" : "clients",
    "description" : "Base authentication for clients",
    "providerId" : "client-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "client-secret",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "client-jwt",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "client-secret-jwt",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 30,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "client-x509",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 40,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "fda4eeaf-947e-49cd-8532-d7c52d100b8e",
    "alias" : "direct grant",
    "description" : "OpenID Connect Resource Owner Grant",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "direct-grant-validate-username",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "direct-grant-validate-password",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 30,
      "autheticatorFlow" : true,
      "flowAlias" : "Direct Grant - Conditional OTP",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "b8c014f1-13ae-488a-9564-5f4875ddce98",
    "alias" : "docker auth",
    "description" : "Used by Docker clients to authenticate against the IDP",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "docker-http-basic-authenticator",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "7b6330b5-a156-474b-bc99-7f371457a08f",
    "alias" : "first broker login",
    "description" : "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticatorConfig" : "review profile config",
      "authenticator" : "idp-review-profile",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "User creation or linking",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "62bc19fc-5e74-49b3-96ab-e9983976f31b",
    "alias" : "forms",
    "description" : "Username, password, otp and other auth forms.",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "auth-username-password-form",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "Browser - Conditional OTP",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "4aa7d045-7585-422e-b66c-5b998ca1aade",
    "alias" : "http challenge",
    "description" : "An authentication flow based on challenge-response HTTP Authentication Schemes",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "no-cookie-redirect",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "Authentication Options",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "d148802c-3fa0-4114-83f9-479fa7605cbb",
    "alias" : "registration",
    "description" : "registration flow",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "registration-page-form",
      "authenticatorFlow" : true,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : true,
      "flowAlias" : "registration form",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "394072b0-6ca5-4efa-9b5d-5d1276e704c1",
    "alias" : "registration form",
    "description" : "registration form",
    "providerId" : "form-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "registration-user-creation",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "registration-profile-action",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 40,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "registration-password-action",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 50,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "registration-recaptcha-action",
      "authenticatorFlow" : false,
      "requirement" : "DISABLED",
      "priority" : 60,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "996e9e09-a56b-4edd-8aea-762307f10440",
    "alias" : "reset credentials",
    "description" : "Reset credentials for a user if they forgot their password or something",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "reset-credentials-choose-user",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "reset-credential-email",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "reset-password",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 30,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 40,
      "autheticatorFlow" : true,
      "flowAlias" : "Reset - Conditional OTP",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "25b2e48d-6583-4de2-9160-409455e24f37",
    "alias" : "saml ecp",
    "description" : "SAML ECP Profile Authentication Flow",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "http-basic-authenticator",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  } ],
  "authenticatorConfig" : [ {
    "id" : "d8826bdf-9cce-4ffe-be0e-3306e8307340",
    "alias" : "create unique user config",
    "config" : {
      "require.password.update.after.registration" : "false"
    }
  }, {
    "id" : "3df1871d-016c-40a0-976e-3c2ede74c818",
    "alias" : "review profile config",
    "config" : {
      "update.profile.on.first.login" : "missing"
    }
  } ],
  "requiredActions" : [ {
    "alias" : "CONFIGURE_TOTP",
    "name" : "Configure OTP",
    "providerId" : "CONFIGURE_TOTP",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 10,
    "config" : { }
  }, {
    "alias" : "TERMS_AND_CONDITIONS",
    "name" : "Terms and Conditions",
    "providerId" : "TERMS_AND_CONDITIONS",
    "enabled" : false,
    "defaultAction" : false,
    "priority" : 20,
    "config" : { }
  }, {
    "alias" : "UPDATE_PASSWORD",
    "name" : "Update Password",
    "providerId" : "UPDATE_PASSWORD",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 30,
    "config" : { }
  }, {
    "alias" : "UPDATE_PROFILE",
    "name" : "Update Profile",
    "providerId" : "UPDATE_PROFILE",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 40,
    "config" : { }
  }, {
    "alias" : "VERIFY_EMAIL",
    "name" : "Verify Email",
    "providerId" : "VERIFY_EMAIL",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 50,
    "config" : { }
  }, {
    "alias" : "delete_account",
    "name" : "Delete Account",
    "providerId" : "delete_account",
    "enabled" : false,
    "defaultAction" : false,
    "priority" : 60,
    "config" : { }
  }, {
    "alias" : "webauthn-register",
    "name" : "Webauthn Register",
    "providerId" : "webauthn-register",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 70,
    "config" : { }
  }, {
    "alias" : "webauthn-register-passwordless",
    "name" : "Webauthn Register Passwordless",
    "providerId" : "webauthn-register-passwordless",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 80,
    "config" : { }
  }, {
    "alias" : "update_user_locale",
    "name" : "Update User Locale",
    "providerId" : "update_user_locale",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 1000,
    "config" : { }
  } ],
  "browserFlow" : "browser",
  "registrationFlow" : "registration",
  "directGrantFlow" : "direct grant",
  "resetCredentialsFlow" : "reset credentials",
  "clientAuthenticationFlow" : "clients",
  "dockerAuthenticationFlow" : "docker auth",
  "attributes" : {
    "cibaBackchannelTokenDeliveryMode" : "poll",
    "cibaExpiresIn" : "120",
    "cibaAuthRequestedUserHint" : "login_hint",
    "oauth2DeviceCodeLifespan" : "600",
    "oauth2DevicePollingInterval" : "5",
    "parRequestUriLifespan" : "60",
    "cibaInterval" : "5",
    "realmReusableOtpCode" : "false"
  },
  "keycloakVersion" : "21.1.2",
  "userManagedAccessAllowed" : false,
  "clientProfiles" : {
    "profiles" : [ ]
  },
  "clientPolicies" : {
    "policies" : [ ]
  }
}
